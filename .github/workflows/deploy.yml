name: Deploy FE and BE to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Pull code from main branch
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_SECRET_KEY }}

      - name: Debug SSH connection
        run: |
          ssh -v -o StrictHostKeyChecking=no ubuntu@ec2-52-64-40-253.ap-southeast-2.compute.amazonaws.com 'echo "SSH connection successful"'

      - name: Create necessary directories on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@ec2-52-64-40-253.ap-southeast-2.compute.amazonaws.com << 'EOF'
            sudo chown -R ubuntu:ubuntu /var/www/DA-FE /var/www/DA-BE
            sudo chmod -R 755 /var/www/DA-FE /var/www/DA-BE
          EOF

      - name: Build Frontend
        run: |
          cd DA-FE
          npm install
          npm run build

      - name: Deploy Frontend to EC2
        run: |
            sudo rm -f -r /var/www/DA-FE/dist/*
            scp -o StrictHostKeyChecking=no -r DA-FE/dist/* ubuntu@ec2-52-64-40-253.ap-southeast-2.compute.amazonaws.com:/var/www/DA-FE/dist
            ssh -o StrictHostKeyChecking=no ubuntu@ec2-52-64-40-253.ap-southeast-2.compute.amazonaws.com << 'EOF'
            cd /var/www/DA-FE

            if [ ! -f .env.production ]; then
              touch .env.production
              echo "VITE_API_BASE_URL=${{ secrets.SERVER_HOST }}" >> .env.production
            fi
            pm2 restart da-fe || pm2 start --name da-fe "npm run preview"
            sudo systemctl restart nginx
            EOF

      - name: Deploy Backend to EC2
        run: |
          scp -o StrictHostKeyChecking=no -r DA-BE/* ubuntu@ec2-52-64-40-253.ap-southeast-2.compute.amazonaws.com:/var/www/DA-BE/
          ssh -o StrictHostKeyChecking=no ubuntu@ec2-52-64-40-253.ap-southeast-2.compute.amazonaws.com << 'EOF'
                cd /var/www/DA-BE
                if [ ! -f .env ]; then
                  touch .env
                  echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
                  echo "DB_USER=${{ secrets.DB_USER }}" >> .env
                  echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
                  echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
                  echo "GOOGLE_EMAIL=${{ secrets.GOOGLE_EMAIL }}" >> .env
                  echo "GOOGLE_PASSWORD=${{ secrets.GOOGLE_PASSWORD }}" >> .env
                  echo "CLIENT_HOST=${{ secrets.CLIENT_HOST }}" >> .env
                  echo "SERVER_HOST=${{ secrets.SERVER_HOST }}" >> .env
                  echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
                  echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
                  echo "JWT_EXPIRES_IN=${{ secrets.JWT_EXPIRES_IN }}" >> .env
                  echo "ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }}" >> .env
                  echo "ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }}" >> .env
                  echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
                  echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
                  echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> .env
                  echo "AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }}" >> .env
                  echo "PORT=${{ secrets.PORT }}" >> .env
                fi
                npm install
                pm2 restart da-be || pm2 start --name da-be "npm start"
          EOF

      - name: Verify deployment
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@ec2-52-64-40-253.ap-southeast-2.compute.amazonaws.com << 'EOF'
            echo "Checking PM2 processes..."
            pm2 list
            echo "Checking Nginx status..."
            sudo systemctl status nginx
          EOF
