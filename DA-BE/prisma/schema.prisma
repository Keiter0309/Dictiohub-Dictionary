// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int      @id @default(autoincrement())
  firstName           String
  lastName            String
  username            String   @unique
  email               String   @unique
  password            String
  confirmPassword     String
  createdAt           DateTime @default(now())
  updatedAt           DateTime @default(now()) @updatedAt
  deletedAt           DateTime?
  deletedBy           Int?
  role                String
  updatedBy           Int?
  resetPasswordOTP    String?
  resetPasswordExpires DateTime?
}

model Words {
  id            Int      @id @default(autoincrement())
  word          String  @unique
  meaning       String
  pronunciation String
  example       String
  definition    String
  partOfSpeech  String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now()) @updatedAt
  deletedAt     DateTime?
  deletedBy     Int?
  updatedBy     Int?

  // Relations
  exampleWords  ExampleWords[]
  pronunciations Pronunciations[]
}

model ExampleWords {
  id          Int      @id @default(autoincrement())
  wordId      Int
  exampleText String
  source      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
  deletedAt   DateTime?
  deletedBy   Int?
  updatedBy   Int?

  // Relations
  word        Words    @relation(fields: [wordId], references: [id])
}

model Pronunciations {
  id        Int      @id @default(autoincrement())
  wordId    Int
  audioPath String
  dialect   String
  ipaText   String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  deletedAt DateTime?
  deletedBy Int?
  updatedBy Int?

  // Relations
  word      Words    @relation(fields: [wordId], references: [id])
}